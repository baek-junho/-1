library(tidyverse)
getwd()
list.files(patten = '.RDS')
stat <- readRDS(file = "2019_KBO_Hitter_Stats.RDS")

teamHits <- stat %>% 
  group_by(팀명) %>% 
  summarise(인원 = n(),
              팀안타 = sum(안타)) %>% 
  mutate(평균안타 = round(x = 팀안타/인원, digits = 2L)) %>% 
  arrange(desc(x = 평균안타))

mean(x = stat$안타, na.rm = TRUE)
mean(x = stat$안타, na.rm = T, trim = 0.05)
library(matrixStats)
install.packages('matrixStats')

weighted.mean(x = teamHits$평균안타,
              w = teamHits$인원)
mean(x = stat$안타, na.rm = TRUE)
mean(x = teamHits$평균안타)

median(x = stat$안타)

tbl <- table(stat$안타)
names(x = tbl) ##각각 값에 해당하는 네임이 문자열 벡터로 나옴

obj <- stat$안타
range(obj)
range(x = stat$안타)
min(stat$안타)
max(stat$안타)
max(stat$안타) - min(stat$안타)
range(x = stat$안타) %>%  diff()

range(obj, na.rm = TRUE)
min(stat$안타)
max(stat$안타)
max(stat$안타) - min(stat$안타)
range(x = stat$안타) %>%  diff()


quantile(x = stat$안타,
         probs = c(0.2, 0.9)) ## probs 쓰면 지정해서 볼수있음 

IQR(x = stat$안타)
 
install.packages('moments')
library(moments)

skewness(x = stat$안타)##왜도는 값이 0 기준으로 양수이면 왼쪽, 음수이면 오른쪽으로 치우친 분포를 보인다
kurtosis(x = stat$안타)##첨도는 3을 기준으로 3보다 작으면 완만한 봉우리, 3보다 크면 뽀죡한 봉우리 3에 가까울수록 정규분포한다

set.seed(seed = 1234)##seed고정시켜놔야 항상같은값을 얻을수있다
hights <- rnorm(n = 5000, mean = 172.4, sd = 5.7)
skewness(x = hights)
kurtosis(x = hights)
shapiro.test(x = hights)

map_dbl(.x = stat[, 3:19], .f = mean, na.rm = TRUE)
map_dbl(.x = stat[, 3:19], .f = sd, na.rm = TRUE)

summary(object = stat)
library(psych)
install.packages('psych')
describe(x = stat[, 3:19])

cov(x = stat$타수, y = stat$안타)
cor(x = stat$타수, y = stat$안타)


range(x = stat$타석)
breaks <- seq(from = 0, to = 650, by = 50)
breaks

cuts <- cut(x = stat$타석, breaks = breaks, include.lowest = TRUE)
stat$타석[1:10]
cuts[1:10]

cuts %>% table() %>% prop.table() %>% 
  round(digits = 4L) *100

stat50 <- stat %>% filter(타석>50)
hist(x = stat50$타석, freq = TRUE, breaks = breaks, ylim = c(0,40),
     col = 'gray30', border = 'gray30', labels = TRUE, main = '히스토그램',
     xlab = '타석', ylab = '빈도수')

range(x = stat50$OPS)
breaks <- seq(from = 0.2, to = 1.1, by = 0.05)
hist(x = stat50$OPS, breaks = breaks, col = 'gray90', labels = TRUE)

hist(x = stat50$OPS, freq = FALSE, breaks = breaks)
lines(x = density(x = stat50$OPS), col = 'red', lwd = 2)
